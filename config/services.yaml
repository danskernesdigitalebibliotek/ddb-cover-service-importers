# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    locale: 'en'
    openPlatform.auth.id: '%env(OPENPLATFORM_AUTH_ID)%'
    openPlatform.auth.secret: '%env(OPENPLATFORM_AUTH_SECRET)%'
    openPlatform.auth.url: '%env(OPENPLATFORM_AUTH_URL)%'
    openPlatform.auth.agency: '%env(OPENPLATFORM_AUTH_AGENCY)%'
    openPlatform.search.url: '%env(OPENPLATFORM_SEARCH_URL)%'
    openPlatform.search.ttl: '%env(OPENPLATFORM_SEARCH_TTL)%'
    openPlatform.search.profile: '%env(OPENPLATFORM_SEARCH_PROFILE)%'
    openPlatform.search.limit: '%env(OPENPLATFORM_SEARCH_LIMIT)%'
    es_config: {'hosts': ['%env(INDEXING_URL)%']}

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

        bind:
            $projectDir: '%kernel.project_dir%'
            $resourcesDir: '%kernel.project_dir%/resources'

    _instanceof:
        App\Service\VendorService\VendorServiceInterface:
            tags: [app.vendor.service]
            calls:
                - setVendorCoreService: ['@App\Service\VendorService\VendorCoreService']

        App\Service\VendorService\VendorServiceImporterInterface:
            tags: [app.vendor.service.importer]

        App\Service\VendorService\VendorServiceSingleIdentifierInterface:
            tags: [ app.vendor.service.single_identifier ]

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Logger\TraceIdProcessor:
        arguments:
            $traceId: '%env(traceId:HTTP_X_REQUEST_ID)%'
        tags:
            - { name: monolog.processor }

    App\MessageHandler\SearchNoHitsMessageHandler:
        arguments:
            $singleIdentifierVendors: !tagged_iterator app.vendor.service.single_identifier

    App\Service\CoverStore\CloudinaryTransformationService:
        arguments:
            $transformations: '%env(yml:file:resolve:CLOUDINARY_CONFIG_FILE)%'

    App\Service\CoverStore\CloudinaryCoverStoreService:
        arguments:
            $cloudinaryCloudName: '%env(string:CLOUDINARY_CLOUD_NAME)%'
            $cloudinaryApiKey: '%env(string:CLOUDINARY_API_KEY)%'
            $cloudinaryApiSecret: '%env(string:CLOUDINARY_API_SECRET)%'

    App\Service\DataWell\DataWellClient:
        arguments:
            $agency: '%env(string:DATAWELL_VENDOR_AGENCY)%'
            $profile: '%env(string:DATAWELL_VENDOR_PROFILE)%'
            $searchURL: '%env(string:DATAWELL_VENDOR_SEARCH_URL)%'
            $user: '%env(string:DATAWELL_VENDOR_USER)%'
            $password: '%env(string:DATAWELL_VENDOR_PASSWORD)%'

    App\Service\HasCoverService:
        arguments:
            $enabled: '%env(bool:HAS_COVER_ENABLED)%'
            $hasCoverServiceUrl: '%env(string:HAS_COVER_SERVICE_URL)%'

    App\Service\Indexing\IndexingElasticService:
        arguments:
            $indexAliasName: '%env(INDEXING_ALIAS)%'

    App\Service\Indexing\IndexingServiceInterface: '@App\Service\Indexing\IndexingElasticService'

    App\Service\VendorService\TheMovieDatabase\TheMovieDatabaseApiClient:
        arguments:
            $apiKey: '%env(string:THEMOVIEDATABASE_APIKEY)%'

    App\Service\VendorService\VendorServiceFactory:
        arguments: [!tagged app.vendor.service]

    Elastic\Elasticsearch\Client:
        factory: ['@Elastic\Elasticsearch\ClientBuilder', fromConfig]
        arguments: ['%es_config%']

    Elastic\Elasticsearch\ClientBuilder: ~

    monolog.formatter.json:
        class: Monolog\Formatter\JsonFormatter
